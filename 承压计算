/*承压计算*/
#include<string>
#include<stdlib>
#include<stdio>
#include<algorithm>
#include<iostream>
#include<vector>
#include<queue>
#include<map>
#include<set>
using namespace std;   //命名空间，使用#include<iostream.h>或#include<iostream> using namespace std;
const int N = 29;      //常类型，不可被更新
double num[N+2][N+2]={0};    //构造一个31*31的零矩阵
double s(double a)           //构造s函数，功能为对传入的值除二返回
{
	return a/2;
}

int main()
{
	freopen("DATA.txt","r",stdin);   //FILE *freopen(const char *filename ,const char *mode ,FILE *stream)
	for(int i = 0 ;i < N ; i++){
		for(int j = 0; j <= i ; j++ )
		{ 
			scanf("%lf",&num[i][j]);   //给矩阵下三角区域赋值

		}
    }

	for(int i = 1 ;i <= N ; i++){
		 
		num[i][0] +=s(num[i-1][0]);    //第一步，处理好每行第一个元素
		for(int j = 1 ; j < i ; j++)
			num[i][j] +=s(num[i-1][j-1]+num[i-1][j]);//第二步，处理好除首尾元素外的其余元素
		num[i][j]+=s(num[i-1][i-1]);   //处理每行最后一个元素
	}

	int max,min;
	for(int i = 1 ; i <= N ; i++)
	{
		if(num[N][i]>num[N][max])  // 将最大值赋给max
			max=i;
		if(num[N][i]<num[N][min])  //将最小值赋给min
			min=i;
	}
    printf("%lf\n",num[N][min]);
	pritnf("%lf\n",num[N][max]*((long long)2086458231)/num[N][min]);



}
/*
3.886331
72665192664.000000
*/
